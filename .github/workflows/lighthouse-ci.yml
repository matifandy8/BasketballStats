name: Lighthouse CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lighthouse:
    name: Lighthouse
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' 
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm ci

      - name: Build application
        run: npm run build

      - name: Start backend server in background
        run: |
          cd apps/backend
          npm install
          npm run build
          nohup npm run dev > backend.log 2>&1 &
          echo "$!" > backend_pid.txt
          # Wait for backend to be ready
          timeout 60 bash -c 'until curl -s http://localhost:3000/health >/dev/null; do echo "Waiting for backend..."; sleep 2; done' || (cat backend.log && exit 1)

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.11.x
          lhci autorun --upload.target=temporary-public-storage --collect.staticDistDir=./apps/frontend/dist

      - name: Stop backend server
        if: always()
        run: |
          if [ -f apps/backend/backend_pid.txt ]; then
            kill $(cat apps/backend/backend_pid.txt) || true
          fi

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: |
            .lighthouseci/
            apps/frontend/dist/**/*.html
            apps/frontend/dist/**/*.js
            apps/frontend/dist/**/*.css
            apps/backend/backend.log
